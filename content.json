{"meta":{"title":"dirtydoge","subtitle":null,"description":null,"author":"Abovesky","url":"http://dirtydoge.com"},"pages":[{"title":"tags","date":"2017-01-24T18:47:17.000Z","updated":"2017-01-24T18:49:43.000Z","comments":false,"path":"tags/index.html","permalink":"http://dirtydoge.com/tags/index.html","excerpt":"","text":""},{"title":"categories","date":"2017-01-24T18:50:14.000Z","updated":"2017-01-24T18:51:11.000Z","comments":false,"path":"categories/index.html","permalink":"http://dirtydoge.com/categories/index.html","excerpt":"","text":""}],"posts":[{"title":"Hello World","slug":"helloworld","date":"2017-01-25T17:37:27.000Z","updated":"2017-01-25T17:37:27.000Z","comments":true,"path":"2017/01/26/helloworld/","link":"","permalink":"http://dirtydoge.com/2017/01/26/helloworld/","excerpt":"","text":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new \"My New Post\" More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment","categories":[],"tags":[]},{"title":"大致安装列表","slug":"大致安装列表","date":"2017-01-24T19:58:47.000Z","updated":"2017-01-24T19:59:09.000Z","comments":true,"path":"2017/01/25/大致安装列表/","link":"","permalink":"http://dirtydoge.com/2017/01/25/大致安装列表/","excerpt":"","text":"HTTP:requests simplejson==3.6.5 MQ:celery pika DB, ORM:pymongo mongoengine redis MySQL-python==1.2.5 SQLAlchemy==0.9.8 Docker:docker-py==1.1.0 IMAGE:python x64bitPillow python x32bit#pil","categories":[{"name":"开发环境 osx","slug":"开发环境-osx","permalink":"http://dirtydoge.com/categories/开发环境-osx/"}],"tags":[{"name":"mac 笔记","slug":"mac-笔记","permalink":"http://dirtydoge.com/tags/mac-笔记/"}]},{"title":"redis 配置","slug":"redis配置","date":"2017-01-24T19:58:05.000Z","updated":"2017-01-24T19:58:20.000Z","comments":true,"path":"2017/01/25/redis配置/","link":"","permalink":"http://dirtydoge.com/2017/01/25/redis配置/","excerpt":"","text":"#!/usr/bin/env bash sudo xcodebuild -license sudo brew updatebrew install redis 安装日志:12345-&gt; % brew install redis==&gt; Downloading https://homebrew.bintray.com/bottles/redis-3.2.1.el_capitan.bottle.tar.gz######################################################################## 100.0%==&gt; Pouring redis-3.2.1.el_capitan.bottle.tar.gz==&gt; Caveats To have launchd start redis now and restart at login: brew services start redis Or, if you don’t want/need a background service you can just run: redis-server /usr/local/etc/redis.conf ==&gt; Summary🍺 /usr/local/Cellar/redis/3.2.1: 10 files, 1.7M","categories":[{"name":"开发环境 osx","slug":"开发环境-osx","permalink":"http://dirtydoge.com/categories/开发环境-osx/"}],"tags":[{"name":"mac 笔记","slug":"mac-笔记","permalink":"http://dirtydoge.com/tags/mac-笔记/"}]},{"title":"ide cdk","slug":"idecdk","date":"2017-01-24T19:55:49.000Z","updated":"2017-01-24T19:57:14.000Z","comments":true,"path":"2017/01/25/idecdk/","link":"","permalink":"http://dirtydoge.com/2017/01/25/idecdk/","excerpt":"","text":"pycharm1243B4A73YYJ-eyJsaWNlbnNlSWQiOiI0M0I0QTczWVlKIiwibGljZW5zZWVOYW1lIjoibGFuIHl1IiwiYXNzaWduZWVOYW1lIjoiIiwiYXNzaWduZWVFbWFpbCI6IiIsImxpY2Vuc2VSZXN0cmljdGlvbiI6IkZvciBlZHVjYXRpb25hbCB1c2Ugb25seSIsImNoZWNrQ29uY3VycmVudFVzZSI6ZmFsc2UsInByb2R1Y3RzIjpbeyJjb2RlIjoiSUkiLCJwYWlkVXBUbyI6IjIwMTctMDItMjUifSx7ImNvZGUiOiJBQyIsInBhaWRVcFRvIjoiMjAxNy0wMi0yNSJ9LHsiY29kZSI6IkRQTiIsInBhaWRVcFRvIjoiMjAxNy0wMi0yNSJ9LHsiY29kZSI6IlBTIiwicGFpZFVwVG8iOiIyMDE3LTAyLTI1In0seyJjb2RlIjoiRE0iLCJwYWlkVXBUbyI6IjIwMTctMDItMjUifSx7ImNvZGUiOiJDTCIsInBhaWRVcFRvIjoiMjAxNy0wMi0yNSJ9LHsiY29kZSI6IlJTMCIsInBhaWRVcFRvIjoiMjAxNy0wMi0yNSJ9LHsiY29kZSI6IlJDIiwicGFpZFVwVG8iOiIyMDE3LTAyLTI1In0seyJjb2RlIjoiUEMiLCJwYWlkVXBUbyI6IjIwMTctMDItMjUifSx7ImNvZGUiOiJSTSIsInBhaWRVcFRvIjoiMjAxNy0wMi0yNSJ9LHsiY29kZSI6IldTIiwicGFpZFVwVG8iOiIyMDE3LTAyLTI1In0seyJjb2RlIjoiREIiLCJwYWlkVXBUbyI6IjIwMTctMDItMjUifSx7ImNvZGUiOiJEQyIsInBhaWRVcFRvIjoiMjAxNy0wMi0yNSJ9XSwiaGFzaCI6IjMzOTgyOTkvMCIsImdyYWNlUGVyaW9kRGF5cyI6MCwiYXV0b1Byb2xvbmdhdGVkIjpmYWxzZSwiaXNBdXRvUHJvbG9uZ2F0ZWQiOmZhbHNlfQ==-keaxIkRgXPKE4BR/ZTs7s7UkP92LBxRe57HvWamu1EHVXTcV1B4f/KNQIrpOpN6dgpjig5eMVMPmo7yMPl+bmwQ8pTZaCGFuLqCHD1ngo6ywHKIQy0nR249sAUVaCl2wGJwaO4JeOh1opUx8chzSBVRZBMz0/MGyygi7duYAff9JQqfH3p/BhDTNM8eKl6z5tnneZ8ZG5bG1XvqFTqWk4FhGsEWdK7B+He44hPjBxKQl2gmZAodb6g9YxfTHhVRKQY5hQ7KPXNvh3ikerHkoaL5apgsVBZJOTDE2KdYTnGLmqxghFx6L0ofqKI6hMr48ergMyflDk6wLNGWJvYHLWw==-MIIEPjCCAiagAwIBAgIBBTANBgkqhkiG9w0BAQsFADAYMRYwFAYDVQQDDA1KZXRQcm9maWxlIENBMB4XDTE1MTEwMjA4MjE0OFoXDTE4MTEwMTA4MjE0OFowETEPMA0GA1UEAwwGcHJvZDN5MIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAxcQkq+zdxlR2mmRYBPzGbUNdMN6OaXiXzxIWtMEkrJMO/5oUfQJbLLuMSMK0QHFmaI37WShyxZcfRCidwXjot4zmNBKnlyHodDij/78TmVqFl8nOeD5+07B8VEaIu7c3E1N+e1doC6wht4I4+IEmtsPAdoaj5WCQVQbrI8KeT8M9VcBIWX7fD0fhexfg3ZRt0xqwMcXGNp3DdJHiO0rCdU+Itv7EmtnSVq9jBG1usMSFvMowR25mju2JcPFp1+I4ZI+FqgR8gyG8oiNDyNEoAbsR3lOpI7grUYSvkB/xVy/VoklPCK2h0f0GJxFjnye8NT1PAywoyl7RmiAVRE/EKwIDAQABo4GZMIGWMAkGA1UdEwQCMAAwHQYDVR0OBBYEFGEpG9oZGcfLMGNBkY7SgHiMGgTcMEgGA1UdIwRBMD+AFKOetkhnQhI2Qb1t4Lm0oFKLl/GzoRykGjAYMRYwFAYDVQQDDA1KZXRQcm9maWxlIENBggkA0myxg7KDeeEwEwYDVR0lBAwwCgYIKwYBBQUHAwEwCwYDVR0PBAQDAgWgMA0GCSqGSIb3DQEBCwUAA4ICAQC9WZuYgQedSuOc5TOUSrRigMw4/+wuC5EtZBfvdl4HT/8vzMW/oUlIP4YCvA0XKyBaCJ2iX+ZCDKoPfiYXiaSiH+HxAPV6J79vvouxKrWg2XV6ShFtPLP+0gPdGq3x9R3+kJbmAm8w+FOdlWqAfJrLvpzMGNeDU14YGXiZ9bVzmIQbwrBA+c/F4tlK/DV07dsNExihqFoibnqDiVNTGombaU2dDup2gwKdL81ua8EIcGNExHe82kjF4zwfadHk3bQVvbfdAwxcDy4xBjs3L4raPLU3yenSzr/OEur1+jfOxnQSmEcMXKXgrAQ9U55gwjcOFKrgOxEdek/Sk1VfOjvS+nuM4eyEruFMfaZHzoQiuw4IqgGc45ohFH0UUyjYcuFxxDSU9lMCv8qdHKm+wnPRb0l9l5vXsCBDuhAGYD6ss+Ga+aDY6f/qXZuUCEUOH3QUNbbCUlviSz6+GiRnt1kA9N2Qachl+2yBfaqUqr8h7Z2gsx5LcIf5kYNsqJ0GavXTVyWh7PYiKX4bs354ZQLUwwa/cG++2+wNWP+HtBhVxMRNTdVhSm38AknZlD+PTAsWGu9GyLmhti2EnVwGybSD2Dxmhxk3IPCkhKAK+pl0eWYGZWG3tJ9mZ7SowcXLWDFAk0lRJnKGFMTggrWjV8GYpw5bq23VmIqqDLgkNzuoog== Sublime cdk 12345678910111213—– BEGIN LICENSE —–Michael BarnesSingle User LicenseEA7E-8213858A353C41 872A0D5C DF9B2950 AFF6F667C458EA6D 8EA3C286 98D1D650 131A97ABAA919AEC EF20E143 B361B1E7 4C8B7F04B085E65E 2F5F5360 8489D422 FB8FC1AA93F6323C FD7F7544 3F39C318 D95E6480FCCC7561 8A4A1741 68FA4223 ADCEDE07200C25BE DBBC4855 C4CFB774 C5EC138C0FEC1CEF D9DCECEC D3A5DAD1 01316C36—— END LICENSE ——","categories":[{"name":"开发环境 osx","slug":"开发环境-osx","permalink":"http://dirtydoge.com/categories/开发环境-osx/"}],"tags":[{"name":"mac 笔记 资源","slug":"mac-笔记-资源","permalink":"http://dirtydoge.com/tags/mac-笔记-资源/"}]},{"title":"php 配置","slug":"pip配置","date":"2017-01-24T19:54:59.000Z","updated":"2017-01-24T19:55:28.000Z","comments":true,"path":"2017/01/25/pip配置/","link":"","permalink":"http://dirtydoge.com/2017/01/25/pip配置/","excerpt":"","text":"常用 Python 开发包:常用基础功能包: requests 等 常用 web 框架相关: flaskpip install -r ./requirements/flask-requirements.txt tornadopip install -r ./requirements/tornado-requirements.txt django ################################################## 1. 用户根目录,创建 .pip 目录2. 将 pip 阿里云镜像源配置文件, 拷贝到 .pip 目录.3. 安装测试:- pip3 install flask- 提示信息: 从 阿里云 的镜像站点下载.################################################# 123cd ~mkdir .pipnano ./pip.conf ~/.pip 12[global]index-url=http://mirrors.aliyun.com/pypi/simple/ 12[install]trusted-host=mirrors.aliyun.com","categories":[{"name":"开发环境 osx","slug":"开发环境-osx","permalink":"http://dirtydoge.com/categories/开发环境-osx/"}],"tags":[{"name":"mac 笔记","slug":"mac-笔记","permalink":"http://dirtydoge.com/tags/mac-笔记/"}]},{"title":"nodejs  配置","slug":"nodejs配置","date":"2017-01-24T19:54:35.000Z","updated":"2017-01-24T19:54:48.000Z","comments":true,"path":"2017/01/25/nodejs配置/","link":"","permalink":"http://dirtydoge.com/2017/01/25/nodejs配置/","excerpt":"","text":"常规安装Build with full-icu (all locales) instead of small-icu (English only)brew install node --with-full-icu brew install node brew link node v7.1.0node -v 国内源安装使用 taobao 的 cnpm 替代 npm 工具淘宝源: https://npm.taobao.org/npm install -g cnpm --registry=https://registry.npm.taobao.org version: 4.4.0cnpm -v 国内源安装小计global install:cnpm install -g webpackcnpm install -g lib:1234cnpm install -g vue-clicnpm install -g weex-toolkitcnpm install -g react-native-clicnpm install -g marked check es:cnpm install -g eslint tool:123cnpm install -g grunt-clicnpm install -g webpackcnpm install -g webpack-dev-server check version:grunt --version","categories":[{"name":"开发环境 osx","slug":"开发环境-osx","permalink":"http://dirtydoge.com/categories/开发环境-osx/"}],"tags":[{"name":"mac 笔记","slug":"mac-笔记","permalink":"http://dirtydoge.com/tags/mac-笔记/"}]},{"title":"Nginx 配置","slug":"Nginx配置","date":"2017-01-24T19:53:59.000Z","updated":"2017-01-24T19:54:21.000Z","comments":true,"path":"2017/01/25/Nginx配置/","link":"","permalink":"http://dirtydoge.com/2017/01/25/Nginx配置/","excerpt":"","text":"Nginx 说明:1. 配置说明:123456789/usr/local/etc/nginx/servers# 配置:cd /usr/local/etc/nginx# 停止：sudo nginx -s quit 2. homebrew 安装日志:1234567891011121314151617==&gt; Pouring nginx-1.8.0.el_capitan.bottle.1.tar.gz==&gt; CaveatsDocroot is: /usr/local/var/wwwThe default port has been set in /usr/local/etc/nginx/nginx.conf to 8080 so thatnginx can run without sudo.nginx will load all files in /usr/local/etc/nginx/servers/.To have launchd start nginx at login: ln -sfv /usr/local/opt/nginx/*.plist ~/Library/LaunchAgentsThen to load nginx now: launchctl load ~/Library/LaunchAgents/homebrew.mxcl.nginx.plistOr, if you don&apos;t want/need launchctl, you can just run: nginx==&gt; Summary sudo brew updatebrew install nginxnginx -vnginx version: nginx/1.8.0配置:cd /usr/local/etc/nginx停止：sudo nginx -s quit","categories":[{"name":"开发环境 osx","slug":"开发环境-osx","permalink":"http://dirtydoge.com/categories/开发环境-osx/"}],"tags":[{"name":"mac 笔记","slug":"mac-笔记","permalink":"http://dirtydoge.com/tags/mac-笔记/"}]},{"title":"mysql 配置","slug":"mysql配置","date":"2017-01-24T19:53:22.000Z","updated":"2017-01-24T19:53:41.000Z","comments":true,"path":"2017/01/25/mysql配置/","link":"","permalink":"http://dirtydoge.com/2017/01/25/mysql配置/","excerpt":"","text":"MySQL 说明:MySQL 配置:123456## 配置路径:# - MySQL 数据库存放路径# - pid 文件, log 文件#/usr/local/var/mysql 安装命令brew install mysql brew info mysql start:mysql.server start restart:mysql.server restart stop:mysql.server stop 登录, 输入密码方式:mysql -uroot -p error-fix:error: Table ‘performance_schema.session_variables’ doesn’t exist-u root -p --force1mysql.server restart MySQL 启动, 登录, 退出:后台进程,启动 mysqldmysqld 前台进程,启动 mysqldmysql.server start 前台,重启:mysql.server restart 前台,退出:mysql.server stop 连接数据库:mysql -uroot -p 常用 SQL 操作:1234567891011121314151617# 显示所有数据库:mysql&gt; show databases;# 选择使用 XX 数据库:mysql&gt; use xxx-database;# 显示数据库里的表:mysql&gt; show tables;# 创建数据库mysql&gt; create database xxx-database;# 执行 sql 文件mysql&gt; source /sql/file/path/xxx.sql;# 退出mysql&gt; quit; 最后附上初始密码的选单###################################################################### 初始化说明:- 执行 brew install mysql, 下一步, 就是根据提示, 执行本脚本命令.- 根据提示, 一步步往下走.- 结束之后, 登录 MySQL 验证: mysql -uroot -p# ###################################################################### 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657-&gt; % mysql_secure_installationmysql_secure_installation: [ERROR] unknown variable &apos;default-character-set=utf8&apos;Securing the MySQL server deployment.Enter password for user root: &lt; 输入 root &gt;VALIDATE PASSWORD PLUGIN can be used to test passwordsand improve security. It checks the strength of passwordand allows the users to set only those passwords which aresecure enough. Would you like to setup VALIDATE PASSWORD plugin?Press y|Y for Yes, any other key for No: yThe password validation plugin is not available. Proceeding with the further steps without the plugin.Using existing password for root.Change the password for root ? ((Press y|Y for Yes, any other key for No) : y &lt; 输入 &gt;New password: &lt;输入: 123456&gt;Re-enter new password: &lt;输入: 123456&gt;By default, a MySQL installation has an anonymous user,allowing anyone to log into MySQL without having to havea user account created for them. This is intended only fortesting, and to make the installation go a bit smoother.You should remove them before moving into a productionenvironment.Remove anonymous users? (Press y|Y for Yes, any other key for No) : y &lt; 输入 &gt;Success.Normally, root should only be allowed to connect from&apos;localhost&apos;. This ensures that someone cannot guess atthe root password from the network.Disallow root login remotely? (Press y|Y for Yes, any other key for No) : y &lt; 输入 &gt;Success.By default, MySQL comes with a database named &apos;test&apos; thatanyone can access. This is also intended only for testing,and should be removed before moving into a productionenvironment.Remove test database and access to it? (Press y|Y for Yes, any other key for No) : n &lt; 输入 &gt; ... skipping.Reloading the privilege tables will ensure that all changesmade so far will take effect immediately.Reload privilege tables now? (Press y|Y for Yes, any other key for No) : y &lt; 输入 &gt;Success.All done!","categories":[{"name":"开发环境 osx","slug":"开发环境-osx","permalink":"http://dirtydoge.com/categories/开发环境-osx/"}],"tags":[{"name":"mac 笔记","slug":"mac-笔记","permalink":"http://dirtydoge.com/tags/mac-笔记/"}]},{"title":"mongodb 配置","slug":"mongodb配置","date":"2017-01-24T19:52:49.000Z","updated":"2017-01-24T19:53:09.000Z","comments":true,"path":"2017/01/25/mongodb配置/","link":"","permalink":"http://dirtydoge.com/2017/01/25/mongodb配置/","excerpt":"","text":"安装 Mongodb1. 参考: 官方文档参考: 如果用mongodb的GUI工具, 只支持 mongodb2.6 如果用pycharm的插件,使用mongo,就可以装3.0 2. 关于启动方式说明: 设置开启启动: ln -sfv /usr/local/opt/mongodb/*.plist ~/Library/LaunchAgents launchctl load ~/Library/LaunchAgents/homebrew.mxcl.mongodb.plist 普通后台启动: mongod –config /usr/local/etc/mongod.conf 3. homebrew方式安装,默认的 数据库 存储目录: dbPath: /usr/local/var/mongodb 1234567891011cat mongod.confsystemLog: destination: file path: /usr/local/var/log/mongodb/mongo.log logAppend: truestorage: dbPath: /usr/local/var/mongodbnet: bindIp: 127.0.0.1 4. 安装日志:```➜ ~ brew install mongodb ==&gt; Downloading https://homebrew.bintray.com/bottles/mongodb-3.0.7.el_capitan.bottle.tar.gz ######################################################################## 100.0%==&gt; Pouring mongodb-3.0.7.el_capitan.bottle.tar.gz==&gt; Caveats To have launchd start mongodb at login: ln -sfv /usr/local/opt/mongodb/*.plist ~/Library/LaunchAgentsThen to load mongodb now: launchctl load ~/Library/LaunchAgents/homebrew.mxcl.mongodb.plist Or, if you don’t want/need launchctl, you can just run: mongod –config /usr/local/etc/mongod.conf==&gt; Summary🍺 /usr/local/Cellar/mongodb/3.0.7: 17 files, 158M➜ ~ ```brew search mongodb 安装3.0版本brew install mongodb 安装2.6版本brew install mongodb26安装日志:-&gt; % brew install mongodb==&gt; Downloading https://homebrew.bintray.com/bottles/mongodb-3.2.8.el_capitan.bottle.tar.gz ######################################################################## 100.0%==&gt; Pouring mongodb-3.2.8.el_capitan.bottle.tar.gz==&gt; Caveats To restart mongodb after an upgrade: brew services restart mongodb Or, if you don’t want/need a background service you can just run: mongod –config /usr/local/etc/mongod.conf ==&gt; Summary🍺 /usr/local/Cellar/mongodb/3.2.8: 17 files, 264.1M","categories":[{"name":"开发环境 osx","slug":"开发环境-osx","permalink":"http://dirtydoge.com/categories/开发环境-osx/"}],"tags":[{"name":"mac 笔记","slug":"mac-笔记","permalink":"http://dirtydoge.com/tags/mac-笔记/"}]},{"title":"mac 优化","slug":"mac优化","date":"2017-01-24T19:52:06.000Z","updated":"2017-01-24T19:52:34.000Z","comments":true,"path":"2017/01/25/mac优化/","link":"","permalink":"http://dirtydoge.com/2017/01/25/mac优化/","excerpt":"初始化系统第三方开启sudo spctl --master-disable 增加空白占位符defaults write com.apple.dock persistent-apps -array-add &#39;{&quot;tile-type&quot;=&quot;spacer-tile&quot;;}&#39;; Killall Dock 隐藏应用使用透明图标显示defaults write com.apple.dock showhidden -bool true; Killall Dock 恢复默认defaults delete com.apple.Dock showhidden; Killall Dock 安装xcode插件xcode-select --install","text":"初始化系统第三方开启sudo spctl --master-disable 增加空白占位符defaults write com.apple.dock persistent-apps -array-add &#39;{&quot;tile-type&quot;=&quot;spacer-tile&quot;;}&#39;; Killall Dock 隐藏应用使用透明图标显示defaults write com.apple.dock showhidden -bool true; Killall Dock 恢复默认defaults delete com.apple.Dock showhidden; Killall Dock 安装xcode插件xcode-select --install Anaconda brew报错alias brew=&quot;env PATH=${PATH//$(pyenv root)\\/shims:/} brew conda 虚拟环境conda create -n python2 python=2.7.13 git设置默认git config --global user.email &quot;&quot;git config --global user.name &quot;&quot; anaconda 包位置/usr/local/var/pyenv/versions/anaconda3-4.2.0/lib/python3.5/site-packages homebrew配置安装homebrew/usr/bin/ruby -e &quot;$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)&quot; 安装oh-my-zshbrew install git wget zshsh -c“$（curl -fsSL https://raw.github.com/robbyrussell/oh-my-zsh/master/tools/install.sh）” 修改homebrew源export HOMEBREW_BOTTLE_DOMAIN=https://mirrors.tuna.tsinghua.edu.cn/homebrew-bottles 常用软件安装brew install autojump autoconf autocode automake curl xz tmux colormake zsh-autosuggestions zsh-syntax-highlighting 配置zshsource /usr/local/share/zsh-syntax-highlighting/zsh-syntax-highlighting.zshsource /usr/local/share/zsh-autosuggestions/zsh-autosuggestions.zsh 参数修改常用源修改123.apmrcregistry=https://registry.npm.taobao.org/ strict-ssl=false 12.npmrcregistry = https://registry.npm.taobao.org 路由器vpn配置123nvram set model=RT-AC68Unvram set HW_ver=170nvram commit vim spf13curl https://j.mp/spf13-vim3 -L &gt; spf13-vim.sh &amp;&amp; sh spf13-vim.sh added by Anaconda3 4.2.0 installerexport PATH=&quot;/Users/abovesky/anaconda/bin:$PATH&quot; 关注项目: git clone git@github.com:mining/mining.git","categories":[{"name":"开发环境 osx","slug":"开发环境-osx","permalink":"http://dirtydoge.com/categories/开发环境-osx/"}],"tags":[{"name":"mac 笔记","slug":"mac-笔记","permalink":"http://dirtydoge.com/tags/mac-笔记/"}]},{"title":"HomeBrew","slug":"HomeBrew","date":"2017-01-24T19:51:24.000Z","updated":"2017-01-24T19:51:46.000Z","comments":true,"path":"2017/01/25/HomeBrew/","link":"","permalink":"http://dirtydoge.com/2017/01/25/HomeBrew/","excerpt":"","text":"homebrew 常用命令: 帮助 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354-&gt; % brewExample usage: brew search [TEXT|/REGEX/] brew (info|home|options) [FORMULA...] brew install FORMULA... brew update brew upgrade [FORMULA...] brew uninstall FORMULA... brew list [FORMULA...]Troubleshooting: brew config brew doctor brew install -vd FORMULABrewing: brew create [URL [--no-fetch]] brew edit [FORMULA...] https://github.com/Homebrew/brew/blob/master/share/doc/homebrew/Formula-Cookbook.mdFurther help: man brew brew help [COMMAND] brew home&lt;!-- more --&gt;# 强制卸载所有版本,否则只卸载最新的版本, 可能残留 旧的版本brew uninstall --force curl# Makes you owner of /usr/local$ sudo chown -R `whoami` /usr/local# Force uninstalls failed python$ brew uninstall -f python# Clear the brew cache$ rm -rf `brew --cache`# Recreate the brew cache$ mkdir `brew --cache`# Cleanup - cleans up old homebrew files$ brew cleanup# Prune - removes dead symlinks in homebrew$ brew prune# Doctor - runs homebrew checks for common error causing issues$ brew doctor homebrew 安装路径: 默认所有通过 brew 安装的软件包路径 12/usr/local/Cellar brew cask 命令: 命令: 1234567# 查看APP信息:brew cask info squirrel# 强制卸载:brew cask uninstall --force XXXX 卸载 homebrew 工具本身: 轻易不要卸载, 会导致所有通过 homebrew 安装的软件, 被自动删除.(代价有点高) 安装 homebrew, 自动装 brew-cask 工具, 卸载同样. homebrew-FAQ 123# uninstall homebrew:ruby -e &quot;$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/uninstall)&quot;","categories":[{"name":"开发环境 osx","slug":"开发环境-osx","permalink":"http://dirtydoge.com/categories/开发环境-osx/"}],"tags":[{"name":"mac 笔记","slug":"mac-笔记","permalink":"http://dirtydoge.com/tags/mac-笔记/"}]},{"title":"Go 语言配置","slug":"Go语言配置","date":"2017-01-24T19:50:51.000Z","updated":"2017-01-24T19:51:06.000Z","comments":true,"path":"2017/01/25/Go语言配置/","link":"","permalink":"http://dirtydoge.com/2017/01/25/Go语言配置/","excerpt":"","text":"关于 go 安装说明:开发环境搭建: go 安装官方文档 必看, 此文档非常详细. Mac osx 开发环境配置: go 安装: 使用 homebrew 方式, 参看脚本. 配置 go 环境变量: (必要步骤) go 安装路径 go 用户代码空间路径 go 开发工具推荐: IDEA ( jb 家的 IDE 全套都可以通过插件来支持 go, 但 idea 支持最佳) sublime text3 Linux 和 Windows 开发环境配置: go 安装: 下载安装包, 或者编译源码安装 配置 go 环境变量: 同上 开发工具: 同上 go 重要包介绍:go 包管理工具: glide 项目说明, 有安装提示和使用方法说明 install go:brew install go installbrew install glide","categories":[{"name":"开发环境 osx","slug":"开发环境-osx","permalink":"http://dirtydoge.com/categories/开发环境-osx/"}],"tags":[{"name":"mac 笔记","slug":"mac-笔记","permalink":"http://dirtydoge.com/tags/mac-笔记/"}]},{"title":"Flask 插件","slug":"Flask插件","date":"2017-01-24T19:50:02.000Z","updated":"2017-01-24T19:50:28.000Z","comments":true,"path":"2017/01/25/Flask插件/","link":"","permalink":"http://dirtydoge.com/2017/01/25/Flask插件/","excerpt":"","text":"flask123456789101112flask-mongoengineFlask==0.10.1Flask-Admin==1.0.8Flask-Cache==0.13.1Flask-ErrorMail==0.2.2Flask-Gravatar==0.4.1Flask-Login==0.2.11Flask-Mail==0.9.1Flask-OAuthlib==0.7.0Flask-SQLAlchemy==2.0Flask-Testing==0.4.2Flask-WTF==0.10.3","categories":[{"name":"开发环境 osx","slug":"开发环境-osx","permalink":"http://dirtydoge.com/categories/开发环境-osx/"}],"tags":[{"name":"mac 笔记","slug":"mac-笔记","permalink":"http://dirtydoge.com/tags/mac-笔记/"}]},{"title":"","slug":"Python配置","date":"2015-11-23T15:13:13.000Z","updated":"2015-11-23T15:13:13.000Z","comments":true,"path":"2015/11/23/Python配置/","link":"","permalink":"http://dirtydoge.com/2015/11/23/Python配置/","excerpt":"","text":"","categories":[],"tags":[]}]}